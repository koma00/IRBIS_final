//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Pft.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace ManagedClient.Pft {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="PftParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface IPftListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>WarningOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWarningOuter([NotNull] PftParser.WarningOuterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>WarningOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWarningOuter([NotNull] PftParser.WarningOuterContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ConditionParen</c>
	/// labeled alternative in <see cref="PftParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionParen([NotNull] PftParser.ConditionParenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConditionParen</c>
	/// labeled alternative in <see cref="PftParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionParen([NotNull] PftParser.ConditionParenContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>FormatItemPlus</c>
	/// labeled alternative in <see cref="PftParser.nonGrouped"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormatItemPlus([NotNull] PftParser.FormatItemPlusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FormatItemPlus</c>
	/// labeled alternative in <see cref="PftParser.nonGrouped"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormatItemPlus([NotNull] PftParser.FormatItemPlusContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>FormatExitOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormatExitOuter([NotNull] PftParser.FormatExitOuterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FormatExitOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormatExitOuter([NotNull] PftParser.FormatExitOuterContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>CommandX</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommandX([NotNull] PftParser.CommandXContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CommandX</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommandX([NotNull] PftParser.CommandXContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>TraceOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTraceOuter([NotNull] PftParser.TraceOuterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TraceOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTraceOuter([NotNull] PftParser.TraceOuterContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>DebugOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDebugOuter([NotNull] PftParser.DebugOuterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DebugOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDebugOuter([NotNull] PftParser.DebugOuterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.rightHand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRightHand([NotNull] PftParser.RightHandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.rightHand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRightHand([NotNull] PftParser.RightHandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.leftHand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeftHand([NotNull] PftParser.LeftHandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.leftHand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeftHand([NotNull] PftParser.LeftHandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.fatal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFatal([NotNull] PftParser.FatalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.fatal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFatal([NotNull] PftParser.FatalContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ErrorOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErrorOuter([NotNull] PftParser.ErrorOuterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ErrorOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErrorOuter([NotNull] PftParser.ErrorOuterContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>SlashNewLine</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSlashNewLine([NotNull] PftParser.SlashNewLineContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SlashNewLine</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSlashNewLine([NotNull] PftParser.SlashNewLineContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.fieldPresense"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldPresense([NotNull] PftParser.FieldPresenseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.fieldPresense"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldPresense([NotNull] PftParser.FieldPresenseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] PftParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] PftParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>TrimFunctionOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrimFunctionOuter([NotNull] PftParser.TrimFunctionOuterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TrimFunctionOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrimFunctionOuter([NotNull] PftParser.TrimFunctionOuterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.conditionalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalStatement([NotNull] PftParser.ConditionalStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.conditionalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalStatement([NotNull] PftParser.ConditionalStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] PftParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] PftParser.ProgramContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.sFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSFunction([NotNull] PftParser.SFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.sFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSFunction([NotNull] PftParser.SFunctionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ModeSwitch</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModeSwitch([NotNull] PftParser.ModeSwitchContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ModeSwitch</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModeSwitch([NotNull] PftParser.ModeSwitchContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.fieldReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldReference([NotNull] PftParser.FieldReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.fieldReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldReference([NotNull] PftParser.FieldReferenceContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ConditionNot</c>
	/// labeled alternative in <see cref="PftParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionNot([NotNull] PftParser.ConditionNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConditionNot</c>
	/// labeled alternative in <see cref="PftParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionNot([NotNull] PftParser.ConditionNotContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>NoccOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoccOuter([NotNull] PftParser.NoccOuterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NoccOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoccOuter([NotNull] PftParser.NoccOuterContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>PercentNewLine</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPercentNewLine([NotNull] PftParser.PercentNewLineContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PercentNewLine</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPercentNewLine([NotNull] PftParser.PercentNewLineContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>FieldReferenceOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldReferenceOuter([NotNull] PftParser.FieldReferenceOuterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FieldReferenceOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldReferenceOuter([NotNull] PftParser.FieldReferenceOuterContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>FatalOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFatalOuter([NotNull] PftParser.FatalOuterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FatalOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFatalOuter([NotNull] PftParser.FatalOuterContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ConditionField</c>
	/// labeled alternative in <see cref="PftParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionField([NotNull] PftParser.ConditionFieldContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConditionField</c>
	/// labeled alternative in <see cref="PftParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionField([NotNull] PftParser.ConditionFieldContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.debug"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDebug([NotNull] PftParser.DebugContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.debug"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDebug([NotNull] PftParser.DebugContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>SFunctionOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSFunctionOuter([NotNull] PftParser.SFunctionOuterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SFunctionOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSFunctionOuter([NotNull] PftParser.SFunctionOuterContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ConditionString</c>
	/// labeled alternative in <see cref="PftParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionString([NotNull] PftParser.ConditionStringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConditionString</c>
	/// labeled alternative in <see cref="PftParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionString([NotNull] PftParser.ConditionStringContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>UnconditionalLiteral</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnconditionalLiteral([NotNull] PftParser.UnconditionalLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnconditionalLiteral</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnconditionalLiteral([NotNull] PftParser.UnconditionalLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>MfnWithLength</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMfnWithLength([NotNull] PftParser.MfnWithLengthContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MfnWithLength</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMfnWithLength([NotNull] PftParser.MfnWithLengthContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>IoccOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIoccOuter([NotNull] PftParser.IoccOuterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IoccOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIoccOuter([NotNull] PftParser.IoccOuterContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>StringTestDirect</c>
	/// labeled alternative in <see cref="PftParser.stringTest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringTestDirect([NotNull] PftParser.StringTestDirectContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StringTestDirect</c>
	/// labeled alternative in <see cref="PftParser.stringTest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringTestDirect([NotNull] PftParser.StringTestDirectContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.formatExit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormatExit([NotNull] PftParser.FormatExitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.formatExit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormatExit([NotNull] PftParser.FormatExitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.error"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterError([NotNull] PftParser.ErrorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.error"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitError([NotNull] PftParser.ErrorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.trimFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrimFunction([NotNull] PftParser.TrimFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.trimFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrimFunction([NotNull] PftParser.TrimFunctionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.trace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrace([NotNull] PftParser.TraceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.trace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrace([NotNull] PftParser.TraceContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>SimpleMfn</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleMfn([NotNull] PftParser.SimpleMfnContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SimpleMfn</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleMfn([NotNull] PftParser.SimpleMfnContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Break</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreak([NotNull] PftParser.BreakContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Break</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreak([NotNull] PftParser.BreakContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ConditionalStatementOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalStatementOuter([NotNull] PftParser.ConditionalStatementOuterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConditionalStatementOuter</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalStatementOuter([NotNull] PftParser.ConditionalStatementOuterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.nocc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNocc([NotNull] PftParser.NoccContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.nocc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNocc([NotNull] PftParser.NoccContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>HashNewLine</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHashNewLine([NotNull] PftParser.HashNewLineContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>HashNewLine</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHashNewLine([NotNull] PftParser.HashNewLineContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>GlobalReference</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalReference([NotNull] PftParser.GlobalReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>GlobalReference</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalReference([NotNull] PftParser.GlobalReferenceContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ConditionAndOr</c>
	/// labeled alternative in <see cref="PftParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionAndOr([NotNull] PftParser.ConditionAndOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConditionAndOr</c>
	/// labeled alternative in <see cref="PftParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionAndOr([NotNull] PftParser.ConditionAndOrContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>CommandC</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommandC([NotNull] PftParser.CommandCContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CommandC</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommandC([NotNull] PftParser.CommandCContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.groupStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupStatement([NotNull] PftParser.GroupStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.groupStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupStatement([NotNull] PftParser.GroupStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>StringTestReverse</c>
	/// labeled alternative in <see cref="PftParser.stringTest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringTestReverse([NotNull] PftParser.StringTestReverseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StringTestReverse</c>
	/// labeled alternative in <see cref="PftParser.stringTest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringTestReverse([NotNull] PftParser.StringTestReverseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.iocc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIocc([NotNull] PftParser.IoccContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.iocc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIocc([NotNull] PftParser.IoccContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Comma</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComma([NotNull] PftParser.CommaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Comma</c>
	/// labeled alternative in <see cref="PftParser.formatItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComma([NotNull] PftParser.CommaContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PftParser.warning"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWarning([NotNull] PftParser.WarningContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PftParser.warning"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWarning([NotNull] PftParser.WarningContext context);
}
} // namespace ManagedClient.Pft
